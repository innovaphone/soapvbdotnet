'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3623
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3623.
'
Namespace pbx_wsdl
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="pbxBinding", [Namespace]:="http://innovaphone.com/pbx"),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(RegInfo)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(No)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(CallInfo)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Info)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Group)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(UserInfo))>  _
    Partial Public Class pbx
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private VersionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EchoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdminOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InitializeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EndOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PollOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LicenseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CallsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserInitializeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserEndOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserCallOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserClearOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserConnectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserPickupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserRedirectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserRerouteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserTransferOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserCtCompleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserHoldOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserRetrieveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserParkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserLocalNumOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LocationUrlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.soap_example.My.MySettings.Default.soap_example_pbx_wsdl_pbx
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event VersionCompleted As VersionCompletedEventHandler
        
        '''<remarks/>
        Public Event EchoCompleted As EchoCompletedEventHandler
        
        '''<remarks/>
        Public Event AdminCompleted As AdminCompletedEventHandler
        
        '''<remarks/>
        Public Event InitializeCompleted As InitializeCompletedEventHandler
        
        '''<remarks/>
        Public Event EndCompleted As EndCompletedEventHandler
        
        '''<remarks/>
        Public Event PollCompleted As PollCompletedEventHandler
        
        '''<remarks/>
        Public Event LicenseCompleted As LicenseCompletedEventHandler
        
        '''<remarks/>
        Public Event CallsCompleted As CallsCompletedEventHandler
        
        '''<remarks/>
        Public Event UserInitializeCompleted As UserInitializeCompletedEventHandler
        
        '''<remarks/>
        Public Event UserEndCompleted As UserEndCompletedEventHandler
        
        '''<remarks/>
        Public Event UserCallCompleted As UserCallCompletedEventHandler
        
        '''<remarks/>
        Public Event UserClearCompleted As UserClearCompletedEventHandler
        
        '''<remarks/>
        Public Event UserConnectCompleted As UserConnectCompletedEventHandler
        
        '''<remarks/>
        Public Event UserPickupCompleted As UserPickupCompletedEventHandler
        
        '''<remarks/>
        Public Event UserRedirectCompleted As UserRedirectCompletedEventHandler
        
        '''<remarks/>
        Public Event UserRerouteCompleted As UserRerouteCompletedEventHandler
        
        '''<remarks/>
        Public Event UserTransferCompleted As UserTransferCompletedEventHandler
        
        '''<remarks/>
        Public Event UserCtCompleteCompleted As UserCtCompleteCompletedEventHandler
        
        '''<remarks/>
        Public Event UserHoldCompleted As UserHoldCompletedEventHandler
        
        '''<remarks/>
        Public Event UserRetrieveCompleted As UserRetrieveCompletedEventHandler
        
        '''<remarks/>
        Public Event UserParkCompleted As UserParkCompletedEventHandler
        
        '''<remarks/>
        Public Event UserLocalNumCompleted As UserLocalNumCompletedEventHandler
        
        '''<remarks/>
        Public Event FindUserCompleted As FindUserCompletedEventHandler
        
        '''<remarks/>
        Public Event LocationUrlCompleted As LocationUrlCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#Version", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Function Version(ByRef GatekeeperID As String, ByRef Location As String, ByRef FirmwareVersion As String, ByRef SerialNumber As String) As <System.Xml.Serialization.SoapElementAttribute("WSDLVersion")> Integer
            Dim results() As Object = Me.Invoke("Version", New Object(-1) {})
            GatekeeperID = CType(results(1),String)
            Location = CType(results(2),String)
            FirmwareVersion = CType(results(3),String)
            SerialNumber = CType(results(4),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VersionAsync()
            Me.VersionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VersionAsync(ByVal userState As Object)
            If (Me.VersionOperationCompleted Is Nothing) Then
                Me.VersionOperationCompleted = AddressOf Me.OnVersionOperationCompleted
            End If
            Me.InvokeAsync("Version", New Object(-1) {}, Me.VersionOperationCompleted, userState)
        End Sub
        
        Private Sub OnVersionOperationCompleted(ByVal arg As Object)
            If (Not (Me.VersionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VersionCompleted(Me, New VersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#Echo", RequestNamespace:="http://innovaphone/binding", ResponseNamespace:="http://innovaphone/binding")>  _
        Public Function Echo(ByVal session As Integer, ByVal key As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> Integer
            Dim results() As Object = Me.Invoke("Echo", New Object() {session, key})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EchoAsync(ByVal session As Integer, ByVal key As Integer)
            Me.EchoAsync(session, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EchoAsync(ByVal session As Integer, ByVal key As Integer, ByVal userState As Object)
            If (Me.EchoOperationCompleted Is Nothing) Then
                Me.EchoOperationCompleted = AddressOf Me.OnEchoOperationCompleted
            End If
            Me.InvokeAsync("Echo", New Object() {session, key}, Me.EchoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEchoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EchoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EchoCompleted(Me, New EchoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#Admin", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Function Admin(ByVal xml As String) As <System.Xml.Serialization.SoapElementAttribute("return")> String
            Dim results() As Object = Me.Invoke("Admin", New Object() {xml})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdminAsync(ByVal xml As String)
            Me.AdminAsync(xml, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdminAsync(ByVal xml As String, ByVal userState As Object)
            If (Me.AdminOperationCompleted Is Nothing) Then
                Me.AdminOperationCompleted = AddressOf Me.OnAdminOperationCompleted
            End If
            Me.InvokeAsync("Admin", New Object() {xml}, Me.AdminOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdminOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdminCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdminCompleted(Me, New AdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#Initialize", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Function Initialize(ByVal user As String, ByVal appl As String, ByVal v As Boolean, ByVal v501 As Boolean, ByRef key As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> Integer
            Dim results() As Object = Me.Invoke("Initialize", New Object() {user, appl, v, v501})
            key = CType(results(1),Integer)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InitializeAsync(ByVal user As String, ByVal appl As String, ByVal v As Boolean, ByVal v501 As Boolean)
            Me.InitializeAsync(user, appl, v, v501, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InitializeAsync(ByVal user As String, ByVal appl As String, ByVal v As Boolean, ByVal v501 As Boolean, ByVal userState As Object)
            If (Me.InitializeOperationCompleted Is Nothing) Then
                Me.InitializeOperationCompleted = AddressOf Me.OnInitializeOperationCompleted
            End If
            Me.InvokeAsync("Initialize", New Object() {user, appl, v, v501}, Me.InitializeOperationCompleted, userState)
        End Sub
        
        Private Sub OnInitializeOperationCompleted(ByVal arg As Object)
            If (Not (Me.InitializeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InitializeCompleted(Me, New InitializeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#End", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Sub [End](ByVal session As Integer)
            Me.Invoke("End", New Object() {session})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EndAsync(ByVal session As Integer)
            Me.EndAsync(session, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EndAsync(ByVal session As Integer, ByVal userState As Object)
            If (Me.EndOperationCompleted Is Nothing) Then
                Me.EndOperationCompleted = AddressOf Me.OnEndOperationCompleted
            End If
            Me.InvokeAsync("End", New Object() {session}, Me.EndOperationCompleted, userState)
        End Sub
        
        Private Sub OnEndOperationCompleted(ByVal arg As Object)
            If (Not (Me.EndCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EndCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#Poll", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Function Poll(ByVal session As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> AnyInfo
            Dim results() As Object = Me.Invoke("Poll", New Object() {session})
            Return CType(results(0),AnyInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PollAsync(ByVal session As Integer)
            Me.PollAsync(session, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PollAsync(ByVal session As Integer, ByVal userState As Object)
            If (Me.PollOperationCompleted Is Nothing) Then
                Me.PollOperationCompleted = AddressOf Me.OnPollOperationCompleted
            End If
            Me.InvokeAsync("Poll", New Object() {session}, Me.PollOperationCompleted, userState)
        End Sub
        
        Private Sub OnPollOperationCompleted(ByVal arg As Object)
            If (Not (Me.PollCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PollCompleted(Me, New PollCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#License", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Function License(ByVal session As Integer, ByVal name As String) As <System.Xml.Serialization.SoapElementAttribute("return")> String
            Dim results() As Object = Me.Invoke("License", New Object() {session, name})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LicenseAsync(ByVal session As Integer, ByVal name As String)
            Me.LicenseAsync(session, name, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LicenseAsync(ByVal session As Integer, ByVal name As String, ByVal userState As Object)
            If (Me.LicenseOperationCompleted Is Nothing) Then
                Me.LicenseOperationCompleted = AddressOf Me.OnLicenseOperationCompleted
            End If
            Me.InvokeAsync("License", New Object() {session, name}, Me.LicenseOperationCompleted, userState)
        End Sub
        
        Private Sub OnLicenseOperationCompleted(ByVal arg As Object)
            If (Not (Me.LicenseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LicenseCompleted(Me, New LicenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#Calls", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Function Calls(ByVal session As Integer, ByVal user As String) As <System.Xml.Serialization.SoapElementAttribute("return")> CallInfo()
            Dim results() As Object = Me.Invoke("Calls", New Object() {session, user})
            Return CType(results(0),CallInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CallsAsync(ByVal session As Integer, ByVal user As String)
            Me.CallsAsync(session, user, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CallsAsync(ByVal session As Integer, ByVal user As String, ByVal userState As Object)
            If (Me.CallsOperationCompleted Is Nothing) Then
                Me.CallsOperationCompleted = AddressOf Me.OnCallsOperationCompleted
            End If
            Me.InvokeAsync("Calls", New Object() {session, user}, Me.CallsOperationCompleted, userState)
        End Sub
        
        Private Sub OnCallsOperationCompleted(ByVal arg As Object)
            If (Not (Me.CallsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CallsCompleted(Me, New CallsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#UserInitialize", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Function UserInitialize(ByVal session As Integer, ByVal user As String, ByVal xfer As Boolean) As <System.Xml.Serialization.SoapElementAttribute("return")> Integer
            Dim results() As Object = Me.Invoke("UserInitialize", New Object() {session, user, xfer})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UserInitializeAsync(ByVal session As Integer, ByVal user As String, ByVal xfer As Boolean)
            Me.UserInitializeAsync(session, user, xfer, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserInitializeAsync(ByVal session As Integer, ByVal user As String, ByVal xfer As Boolean, ByVal userState As Object)
            If (Me.UserInitializeOperationCompleted Is Nothing) Then
                Me.UserInitializeOperationCompleted = AddressOf Me.OnUserInitializeOperationCompleted
            End If
            Me.InvokeAsync("UserInitialize", New Object() {session, user, xfer}, Me.UserInitializeOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserInitializeOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserInitializeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserInitializeCompleted(Me, New UserInitializeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("capeconnect:pbx:pbxPortType#UserEnd", RequestNamespace:="http://innovaphone/binding", ResponseNamespace:="http://innovaphone/binding")>  _
        Public Sub UserEnd(ByVal user As Integer)
            Me.Invoke("UserEnd", New Object() {user})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserEndAsync(ByVal user As Integer)
            Me.UserEndAsync(user, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserEndAsync(ByVal user As Integer, ByVal userState As Object)
            If (Me.UserEndOperationCompleted Is Nothing) Then
                Me.UserEndOperationCompleted = AddressOf Me.OnUserEndOperationCompleted
            End If
            Me.InvokeAsync("UserEnd", New Object() {user}, Me.UserEndOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserEndOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserEndCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserEndCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#UserCall", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Function UserCall(ByVal user As Integer, ByVal cn As String, ByVal e164 As String, ByVal h323 As String, ByVal reg As Integer, ByVal info() As Info) As <System.Xml.Serialization.SoapElementAttribute("return")> Integer
            Dim results() As Object = Me.Invoke("UserCall", New Object() {user, cn, e164, h323, reg, info})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UserCallAsync(ByVal user As Integer, ByVal cn As String, ByVal e164 As String, ByVal h323 As String, ByVal reg As Integer, ByVal info() As Info)
            Me.UserCallAsync(user, cn, e164, h323, reg, info, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserCallAsync(ByVal user As Integer, ByVal cn As String, ByVal e164 As String, ByVal h323 As String, ByVal reg As Integer, ByVal info() As Info, ByVal userState As Object)
            If (Me.UserCallOperationCompleted Is Nothing) Then
                Me.UserCallOperationCompleted = AddressOf Me.OnUserCallOperationCompleted
            End If
            Me.InvokeAsync("UserCall", New Object() {user, cn, e164, h323, reg, info}, Me.UserCallOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserCallOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserCallCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserCallCompleted(Me, New UserCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#UserClear", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Sub UserClear(ByVal [call] As Integer, ByVal cause As Integer, ByVal info() As Info)
            Me.Invoke("UserClear", New Object() {[call], cause, info})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserClearAsync(ByVal [call] As Integer, ByVal cause As Integer, ByVal info() As Info)
            Me.UserClearAsync([call], cause, info, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserClearAsync(ByVal [call] As Integer, ByVal cause As Integer, ByVal info() As Info, ByVal userState As Object)
            If (Me.UserClearOperationCompleted Is Nothing) Then
                Me.UserClearOperationCompleted = AddressOf Me.OnUserClearOperationCompleted
            End If
            Me.InvokeAsync("UserClear", New Object() {[call], cause, info}, Me.UserClearOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserClearOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserClearCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserClearCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#UserConnect", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Sub UserConnect(ByVal [call] As Integer)
            Me.Invoke("UserConnect", New Object() {[call]})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserConnectAsync(ByVal [call] As Integer)
            Me.UserConnectAsync([call], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserConnectAsync(ByVal [call] As Integer, ByVal userState As Object)
            If (Me.UserConnectOperationCompleted Is Nothing) Then
                Me.UserConnectOperationCompleted = AddressOf Me.OnUserConnectOperationCompleted
            End If
            Me.InvokeAsync("UserConnect", New Object() {[call]}, Me.UserConnectOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserConnectOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserConnectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserConnectCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#UserPickup", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Function UserPickup(ByVal user As Integer, ByVal cn As String, ByVal [call] As Integer, ByVal group As String, ByVal reg As Integer, ByVal info() As Info) As <System.Xml.Serialization.SoapElementAttribute("return")> Integer
            Dim results() As Object = Me.Invoke("UserPickup", New Object() {user, cn, [call], group, reg, info})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UserPickupAsync(ByVal user As Integer, ByVal cn As String, ByVal [call] As Integer, ByVal group As String, ByVal reg As Integer, ByVal info() As Info)
            Me.UserPickupAsync(user, cn, [call], group, reg, info, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserPickupAsync(ByVal user As Integer, ByVal cn As String, ByVal [call] As Integer, ByVal group As String, ByVal reg As Integer, ByVal info() As Info, ByVal userState As Object)
            If (Me.UserPickupOperationCompleted Is Nothing) Then
                Me.UserPickupOperationCompleted = AddressOf Me.OnUserPickupOperationCompleted
            End If
            Me.InvokeAsync("UserPickup", New Object() {user, cn, [call], group, reg, info}, Me.UserPickupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserPickupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserPickupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserPickupCompleted(Me, New UserPickupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#UserRedirect", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Function UserRedirect(ByVal [call] As Integer, ByVal cn As String, ByVal e164 As String, ByVal h323 As String, ByVal info() As Info) As <System.Xml.Serialization.SoapElementAttribute("return")> Boolean
            Dim results() As Object = Me.Invoke("UserRedirect", New Object() {[call], cn, e164, h323, info})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UserRedirectAsync(ByVal [call] As Integer, ByVal cn As String, ByVal e164 As String, ByVal h323 As String, ByVal info() As Info)
            Me.UserRedirectAsync([call], cn, e164, h323, info, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserRedirectAsync(ByVal [call] As Integer, ByVal cn As String, ByVal e164 As String, ByVal h323 As String, ByVal info() As Info, ByVal userState As Object)
            If (Me.UserRedirectOperationCompleted Is Nothing) Then
                Me.UserRedirectOperationCompleted = AddressOf Me.OnUserRedirectOperationCompleted
            End If
            Me.InvokeAsync("UserRedirect", New Object() {[call], cn, e164, h323, info}, Me.UserRedirectOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserRedirectOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserRedirectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserRedirectCompleted(Me, New UserRedirectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#UserReroute", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Function UserReroute(ByVal [call] As Integer, ByVal cn As String, ByVal e164 As String, ByVal h323 As String, ByVal info() As Info) As <System.Xml.Serialization.SoapElementAttribute("return")> Boolean
            Dim results() As Object = Me.Invoke("UserReroute", New Object() {[call], cn, e164, h323, info})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UserRerouteAsync(ByVal [call] As Integer, ByVal cn As String, ByVal e164 As String, ByVal h323 As String, ByVal info() As Info)
            Me.UserRerouteAsync([call], cn, e164, h323, info, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserRerouteAsync(ByVal [call] As Integer, ByVal cn As String, ByVal e164 As String, ByVal h323 As String, ByVal info() As Info, ByVal userState As Object)
            If (Me.UserRerouteOperationCompleted Is Nothing) Then
                Me.UserRerouteOperationCompleted = AddressOf Me.OnUserRerouteOperationCompleted
            End If
            Me.InvokeAsync("UserReroute", New Object() {[call], cn, e164, h323, info}, Me.UserRerouteOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserRerouteOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserRerouteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserRerouteCompleted(Me, New UserRerouteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#UserTransfer", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Sub UserTransfer(ByVal a As Integer, ByVal b As Integer)
            Me.Invoke("UserTransfer", New Object() {a, b})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserTransferAsync(ByVal a As Integer, ByVal b As Integer)
            Me.UserTransferAsync(a, b, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserTransferAsync(ByVal a As Integer, ByVal b As Integer, ByVal userState As Object)
            If (Me.UserTransferOperationCompleted Is Nothing) Then
                Me.UserTransferOperationCompleted = AddressOf Me.OnUserTransferOperationCompleted
            End If
            Me.InvokeAsync("UserTransfer", New Object() {a, b}, Me.UserTransferOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserTransferOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserTransferCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserTransferCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#UserCtComplete", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Sub UserCtComplete(ByVal [call] As Integer, ByVal e164 As String, ByVal h323 As String)
            Me.Invoke("UserCtComplete", New Object() {[call], e164, h323})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserCtCompleteAsync(ByVal [call] As Integer, ByVal e164 As String, ByVal h323 As String)
            Me.UserCtCompleteAsync([call], e164, h323, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserCtCompleteAsync(ByVal [call] As Integer, ByVal e164 As String, ByVal h323 As String, ByVal userState As Object)
            If (Me.UserCtCompleteOperationCompleted Is Nothing) Then
                Me.UserCtCompleteOperationCompleted = AddressOf Me.OnUserCtCompleteOperationCompleted
            End If
            Me.InvokeAsync("UserCtComplete", New Object() {[call], e164, h323}, Me.UserCtCompleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserCtCompleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserCtCompleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserCtCompleteCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#UserHold", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Sub UserHold(ByVal [call] As Integer)
            Me.Invoke("UserHold", New Object() {[call]})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserHoldAsync(ByVal [call] As Integer)
            Me.UserHoldAsync([call], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserHoldAsync(ByVal [call] As Integer, ByVal userState As Object)
            If (Me.UserHoldOperationCompleted Is Nothing) Then
                Me.UserHoldOperationCompleted = AddressOf Me.OnUserHoldOperationCompleted
            End If
            Me.InvokeAsync("UserHold", New Object() {[call]}, Me.UserHoldOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserHoldOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserHoldCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserHoldCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#UserRetrieve", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Sub UserRetrieve(ByVal [call] As Integer)
            Me.Invoke("UserRetrieve", New Object() {[call]})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserRetrieveAsync(ByVal [call] As Integer)
            Me.UserRetrieveAsync([call], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserRetrieveAsync(ByVal [call] As Integer, ByVal userState As Object)
            If (Me.UserRetrieveOperationCompleted Is Nothing) Then
                Me.UserRetrieveOperationCompleted = AddressOf Me.OnUserRetrieveOperationCompleted
            End If
            Me.InvokeAsync("UserRetrieve", New Object() {[call]}, Me.UserRetrieveOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserRetrieveOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserRetrieveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserRetrieveCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#UserPark", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Function UserPark(ByVal [call] As Integer, ByVal cn As String, ByVal position As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> Integer
            Dim results() As Object = Me.Invoke("UserPark", New Object() {[call], cn, position})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UserParkAsync(ByVal [call] As Integer, ByVal cn As String, ByVal position As Integer)
            Me.UserParkAsync([call], cn, position, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserParkAsync(ByVal [call] As Integer, ByVal cn As String, ByVal position As Integer, ByVal userState As Object)
            If (Me.UserParkOperationCompleted Is Nothing) Then
                Me.UserParkOperationCompleted = AddressOf Me.OnUserParkOperationCompleted
            End If
            Me.InvokeAsync("UserPark", New Object() {[call], cn, position}, Me.UserParkOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserParkOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserParkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserParkCompleted(Me, New UserParkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#UserLocalNum", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Function UserLocalNum(ByVal user As Integer, ByVal num As String) As <System.Xml.Serialization.SoapElementAttribute("return")> String
            Dim results() As Object = Me.Invoke("UserLocalNum", New Object() {user, num})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UserLocalNumAsync(ByVal user As Integer, ByVal num As String)
            Me.UserLocalNumAsync(user, num, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserLocalNumAsync(ByVal user As Integer, ByVal num As String, ByVal userState As Object)
            If (Me.UserLocalNumOperationCompleted Is Nothing) Then
                Me.UserLocalNumOperationCompleted = AddressOf Me.OnUserLocalNumOperationCompleted
            End If
            Me.InvokeAsync("UserLocalNum", New Object() {user, num}, Me.UserLocalNumOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserLocalNumOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserLocalNumCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserLocalNumCompleted(Me, New UserLocalNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#FindUser", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Function FindUser(ByVal v501 As String, ByVal cn As String, ByVal h323 As String, ByVal e164 As String, ByVal count As Integer, ByVal [next] As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> UserInfo()
            Dim results() As Object = Me.Invoke("FindUser", New Object() {v501, cn, h323, e164, count, [next]})
            Return CType(results(0),UserInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindUserAsync(ByVal v501 As String, ByVal cn As String, ByVal h323 As String, ByVal e164 As String, ByVal count As Integer, ByVal [next] As Integer)
            Me.FindUserAsync(v501, cn, h323, e164, count, [next], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindUserAsync(ByVal v501 As String, ByVal cn As String, ByVal h323 As String, ByVal e164 As String, ByVal count As Integer, ByVal [next] As Integer, ByVal userState As Object)
            If (Me.FindUserOperationCompleted Is Nothing) Then
                Me.FindUserOperationCompleted = AddressOf Me.OnFindUserOperationCompleted
            End If
            Me.InvokeAsync("FindUser", New Object() {v501, cn, h323, e164, count, [next]}, Me.FindUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindUserCompleted(Me, New FindUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://innovaphone.com/pbx#LocationUrl", RequestNamespace:="http://innovaphone.com/pbx", ResponseNamespace:="http://innovaphone.com/pbx")>  _
        Public Function LocationUrl(ByVal v501 As String, ByVal loc As String) As <System.Xml.Serialization.SoapElementAttribute("return")> String
            Dim results() As Object = Me.Invoke("LocationUrl", New Object() {v501, loc})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LocationUrlAsync(ByVal v501 As String, ByVal loc As String)
            Me.LocationUrlAsync(v501, loc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LocationUrlAsync(ByVal v501 As String, ByVal loc As String, ByVal userState As Object)
            If (Me.LocationUrlOperationCompleted Is Nothing) Then
                Me.LocationUrlOperationCompleted = AddressOf Me.OnLocationUrlOperationCompleted
            End If
            Me.InvokeAsync("LocationUrl", New Object() {v501, loc}, Me.LocationUrlOperationCompleted, userState)
        End Sub
        
        Private Sub OnLocationUrlOperationCompleted(ByVal arg As Object)
            If (Not (Me.LocationUrlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LocationUrlCompleted(Me, New LocationUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://innovaphone.com/pbx")>  _
    Partial Public Class AnyInfo
        
        Private userField() As UserInfo
        
        Private callField() As CallInfo
        
        Private regField() As RegInfo
        
        Private infoField() As Info
        
        '''<remarks/>
        Public Property user() As UserInfo()
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [call]() As CallInfo()
            Get
                Return Me.callField
            End Get
            Set
                Me.callField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property reg() As RegInfo()
            Get
                Return Me.regField
            End Get
            Set
                Me.regField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property info() As Info()
            Get
                Return Me.infoField
            End Get
            Set
                Me.infoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://innovaphone.com/pbx")>  _
    Partial Public Class UserInfo
        
        Private guidField As String
        
        Private activeField As Boolean
        
        Private stateField As Integer
        
        Private channelField As Integer
        
        Private alertField As Integer
        
        Private cnField As String
        
        Private dnField As String
        
        Private typeField As String
        
        Private e164Field As String
        
        Private h323Field As String
        
        Private groupsField() As Group
        
        Private infoField() As Info
        
        '''<remarks/>
        Public Property guid() As String
            Get
                Return Me.guidField
            End Get
            Set
                Me.guidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property active() As Boolean
            Get
                Return Me.activeField
            End Get
            Set
                Me.activeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property state() As Integer
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property channel() As Integer
            Get
                Return Me.channelField
            End Get
            Set
                Me.channelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property alert() As Integer
            Get
                Return Me.alertField
            End Get
            Set
                Me.alertField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cn() As String
            Get
                Return Me.cnField
            End Get
            Set
                Me.cnField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dn() As String
            Get
                Return Me.dnField
            End Get
            Set
                Me.dnField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property e164() As String
            Get
                Return Me.e164Field
            End Get
            Set
                Me.e164Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property h323() As String
            Get
                Return Me.h323Field
            End Get
            Set
                Me.h323Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groups() As Group()
            Get
                Return Me.groupsField
            End Get
            Set
                Me.groupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property info() As Info()
            Get
                Return Me.infoField
            End Get
            Set
                Me.infoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://innovaphone.com/pbx")>  _
    Partial Public Class Group
        
        Private groupField As String
        
        Private activeField As Boolean
        
        '''<remarks/>
        Public Property group() As String
            Get
                Return Me.groupField
            End Get
            Set
                Me.groupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property active() As Boolean
            Get
                Return Me.activeField
            End Get
            Set
                Me.activeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://innovaphone.com/pbx")>  _
    Partial Public Class RegInfo
        
        Private activeField As Boolean
        
        Private userField As Integer
        
        Private regField As Integer
        
        Private hwField As String
        
        Private soapField As String
        
        Private infoField() As Info
        
        '''<remarks/>
        Public Property active() As Boolean
            Get
                Return Me.activeField
            End Get
            Set
                Me.activeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property user() As Integer
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property reg() As Integer
            Get
                Return Me.regField
            End Get
            Set
                Me.regField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hw() As String
            Get
                Return Me.hwField
            End Get
            Set
                Me.hwField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property soap() As String
            Get
                Return Me.soapField
            End Get
            Set
                Me.soapField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property info() As Info()
            Get
                Return Me.infoField
            End Get
            Set
                Me.infoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://innovaphone.com/pbx")>  _
    Partial Public Class Info
        
        Private typeField As String
        
        Private valiField As Integer
        
        Private valsField As String
        
        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property vali() As Integer
            Get
                Return Me.valiField
            End Get
            Set
                Me.valiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property vals() As String
            Get
                Return Me.valsField
            End Get
            Set
                Me.valsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://innovaphone.com/pbx")>  _
    Partial Public Class No
        
        Private typeField As String
        
        Private cnField As String
        
        Private dnField As String
        
        Private e164Field As String
        
        Private h323Field As String
        
        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cn() As String
            Get
                Return Me.cnField
            End Get
            Set
                Me.cnField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dn() As String
            Get
                Return Me.dnField
            End Get
            Set
                Me.dnField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property e164() As String
            Get
                Return Me.e164Field
            End Get
            Set
                Me.e164Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property h323() As String
            Get
                Return Me.h323Field
            End Get
            Set
                Me.h323Field = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://innovaphone.com/pbx")>  _
    Partial Public Class CallInfo
        
        Private userField As Integer
        
        Private callField As Integer
        
        Private regField As Integer
        
        Private activeField As Boolean
        
        Private stateField As Integer
        
        Private noField() As No
        
        Private msgField As String
        
        Private infoField() As Info
        
        '''<remarks/>
        Public Property user() As Integer
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [call]() As Integer
            Get
                Return Me.callField
            End Get
            Set
                Me.callField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property reg() As Integer
            Get
                Return Me.regField
            End Get
            Set
                Me.regField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property active() As Boolean
            Get
                Return Me.activeField
            End Get
            Set
                Me.activeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property state() As Integer
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property No() As No()
            Get
                Return Me.noField
            End Get
            Set
                Me.noField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property msg() As String
            Get
                Return Me.msgField
            End Get
            Set
                Me.msgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property info() As Info()
            Get
                Return Me.infoField
            End Get
            Set
                Me.infoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VersionCompletedEventHandler(ByVal sender As Object, ByVal e As VersionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VersionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property GatekeeperID() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Location() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property FirmwareVersion() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property SerialNumber() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub EchoCompletedEventHandler(ByVal sender As Object, ByVal e As EchoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EchoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub AdminCompletedEventHandler(ByVal sender As Object, ByVal e As AdminCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdminCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub InitializeCompletedEventHandler(ByVal sender As Object, ByVal e As InitializeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InitializeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property key() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub EndCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub PollCompletedEventHandler(ByVal sender As Object, ByVal e As PollCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PollCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AnyInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AnyInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub LicenseCompletedEventHandler(ByVal sender As Object, ByVal e As LicenseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LicenseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub CallsCompletedEventHandler(ByVal sender As Object, ByVal e As CallsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CallsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CallInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CallInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UserInitializeCompletedEventHandler(ByVal sender As Object, ByVal e As UserInitializeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UserInitializeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UserEndCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UserCallCompletedEventHandler(ByVal sender As Object, ByVal e As UserCallCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UserCallCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UserClearCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UserConnectCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UserPickupCompletedEventHandler(ByVal sender As Object, ByVal e As UserPickupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UserPickupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UserRedirectCompletedEventHandler(ByVal sender As Object, ByVal e As UserRedirectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UserRedirectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UserRerouteCompletedEventHandler(ByVal sender As Object, ByVal e As UserRerouteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UserRerouteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UserTransferCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UserCtCompleteCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UserHoldCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UserRetrieveCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UserParkCompletedEventHandler(ByVal sender As Object, ByVal e As UserParkCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UserParkCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UserLocalNumCompletedEventHandler(ByVal sender As Object, ByVal e As UserLocalNumCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UserLocalNumCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub FindUserCompletedEventHandler(ByVal sender As Object, ByVal e As FindUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub LocationUrlCompletedEventHandler(ByVal sender As Object, ByVal e As LocationUrlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LocationUrlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
